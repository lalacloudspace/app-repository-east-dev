version: 0.2

env:
  parameter-store:
    ACM_CERTIFICATE_ARN: "ACMcertification"   # SSM parameter for ACM Certificate ARN
    HOSTED_ZONE_ID: "HostedZoneID"  # SSM parameter for Hosted Zone ID
  
  variables:
    DOMAIN_NAME: "luxabaya.com"  # Hardcoded domain name
    BUCKET_NAME: "theabayacollection-bucket"  # S3 bucket name

phases:
  install:
    runtime-versions:
      python: 3.8

  pre_build:
    commands:
      - echo "Installing dependencies, if any"

  build:
    commands:
      - echo "Deploying CloudFormation stack"
      # Create the CloudFormation stack to ensure the bucket is created first
      - aws cloudformation create-stack --stack-name pipeline-stack-dev --template-body file://s3_static_web.yml --capabilities CAPABILITY_NAMED_IAM \
          --parameters ParameterKey=DomainName,ParameterValue=luxabaya.com \
          ParameterKey=BucketName,ParameterValue=theabayacollection-bucket
      - echo "Waiting for CloudFormation stack creation to complete"
      # Wait for the CloudFormation stack to be created before continuing
      - aws cloudformation wait stack-create-complete --stack-name pipeline-stack-dev
      - echo "CloudFormation stack created successfully"

  post_build:
    commands:
      - echo "Uploading static website files to S3"
      # Now that the bucket is created, upload the files
      - aws s3 cp index.html s3://theabayacollection-bucket/index.html --acl bucket-owner-full-control
      - aws s3 cp error.html s3://theabayacollection-bucket/error.html --acl bucket-owner-full-control
      - echo "Validating CloudFormation Template"
      - aws cloudformation validate-template --template-body file://s3_static_web.yml
      - echo "Build stage completed"

artifacts:
  files:
    - '**/*'
