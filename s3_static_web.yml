AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template to host a static website on S3 with CloudFront and Route 53 using Legacy CloudFront OAI

Parameters:
  DomainName:
    Type: String
    Description: "The root domain name for the static website"
    Default: luxabaya.com

  ACMCertificateArn:
    Description: The ARN of the ACM Certificate for HTTPS Listener.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ACMcertification
  
  HostedZoneId:
    Type: AWS::SSM::Parameter::Value<String>
    Description: SSM parameter name for the Route 53 hosted zone ID
    Default: HostedZoneID
  
  BucketName:
    Type: String
    Description: "The name of the S3 bucket to store the static website files"
    Default: theabayacollection-bucket

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      
  SiteOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "Legacy OAI for ${AWS::StackName} website"

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontAccess
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt SiteOAI.S3CanonicalUserId
            Action:
              - s3:GetObject
            Resource: !Sub "${WebsiteBucket.Arn}/*"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
          - !Sub "www.${DomainName}"
        Origins:
          - DomainName: !GetAtt WebsiteBucket.DomainName
            Id: S3-WebsiteBucket
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${SiteOAI}"
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3-WebsiteBucket
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /error.html
        ViewerCertificate:
          AcmCertificateArn: !Ref ACMCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019

  DNSRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            DNSName: !GetAtt CloudFrontDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2
        - Name: !Sub "www.${DomainName}"
          Type: A
          AliasTarget:
            DNSName: !GetAtt CloudFrontDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  WebsiteURL:
    Description: "CloudFront Distribution URL for the static website"
    Value: !Sub "https://${CloudFrontDistribution.DomainName}/"

  S3BucketName:
    Description: "The name of the S3 bucket used to host the website"
    Value: !Ref WebsiteBucket
